##MyBox#
MyBoxTreeRoot;;;
JShell codes

##MyBox#
JShell codes
Examples

##MyBox#
JShell codes > Examples
Object

##MyBox#
JShell codes > Examples > Object
string
String exampleString = "hello";
exampleString += " world";
"Contains e:"+ exampleString.contains("e") + "   length:" + exampleString.length();

##MyBox#
JShell codes > Examples > Object
time
import java.util.Date;
Date exampleDate = new Date();
"current time:" + exampleDate.toString() + "     value:" + exampleDate.getTime();

##MyBox#
JShell codes > Examples > Object
array
import java.util.Arrays;
double[] exampleArray =  new double[5];
for (int i=0; i<exampleArray.length; i++ ) {
    exampleArray[i] = i * 2;
}
exampleArray[2];

##MyBox#
JShell codes > Examples > Object
list
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
List<String> exampleList = new ArrayList<>();
exampleList.addAll(Arrays.asList("a", "b", "c", "d", "e"));
exampleList.toString();

##MyBox#
JShell codes > Examples
Expressions

##MyBox#
JShell codes > Examples > Expressions
Numeric operations

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
e
Math.E

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
pi
Math.PI

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
absoluate
Math.abs(-5.611)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
square root
Math.sqrt(9)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
cubic root
Math.cbrt(27)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
power
Math.pow(2,5)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
power of e
Math.exp(2)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
natural logarithm(base e)
Math.log(6)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
common logarithm(base 10)
Math.log10(6)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
cosine
Math.cos(0)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
sine
Math.sin(9)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
tangent
Math.tan(5)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
arc tangent
Math.atan(-7.3)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
arc cosine
Math.acos(0.5)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
arc sine
Math.asin(0.3)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
round up
Math.ceil(4.13)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
round down
Math.floor(4.67)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
round
Math.round(4.83)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
random
Math.random()

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
maximum
Math.max(1,-3)

##MyBox#
JShell codes > Examples > Expressions > Numeric operations
minimum
Math.min(1,-3)

##MyBox#
JShell codes > Examples > Expressions
Strings operations

##MyBox#
JShell codes > Examples > Expressions > Strings operations
equals while ignore case
"Hello".equalsIgnoreCase("hello")

##MyBox#
JShell codes > Examples > Expressions > Strings operations
equals
"Hello".equals("hello")

##MyBox#
JShell codes > Examples > Expressions > Strings operations
replace first
"Hello World! World is yourself.".replace("World", "Feeling");

##MyBox#
JShell codes > Examples > Expressions > Strings operations
replace all
"Hello World! World is yourself.".replace(/World/g, "Feeling");

##MyBox#
JShell codes > Examples > Expressions > Strings operations
starts with
"Hello".startsWith("h")

##MyBox#
JShell codes > Examples > Expressions > Strings operations
end with
"Hello".endsWith("o")

##MyBox#
JShell codes > Examples > Expressions > Strings operations
subString
"Hello".substring(2, 5)

##MyBox#
JShell codes > Examples > Expressions > Strings operations
char at
"hello".charAt(2)

##MyBox#
JShell codes > Examples > Expressions > Strings operations
concat
"hello".concat(" world")

##MyBox#
JShell codes > Examples > Expressions > Strings operations
split
"1,2,3,4".split(",")

##MyBox#
JShell codes > Examples > Expressions > Strings operations
indexOf
"hello".indexOf("e")

##MyBox#
JShell codes > Examples > Expressions > Strings operations
lastIndexOf
"hello".lastIndexOf("l")

##MyBox#
JShell codes > Examples > Expressions > Strings operations
length
"hello".length()

##MyBox#
JShell codes > Examples > Expressions > Strings operations
toLowerCase
"Hello".toLowerCase()

##MyBox#
JShell codes > Examples > Expressions > Strings operations
toUpperCase
"Hello".toUpperCase()

##MyBox#
JShell codes > Examples > Expressions > Strings operations
contains
"Hello".contains("el")

##MyBox#
JShell codes > Examples > Expressions > Strings operations
trim
" Hello  ".trim()

##MyBox#
JShell codes > Examples > Expressions > Strings operations
isBlank
"  ".isBlank()

##MyBox#
JShell codes > Examples > Expressions > Strings operations
isEmpty
"".isEmpty()

##MyBox#
JShell codes > Examples > Expressions
Boolean operations

##MyBox#
JShell codes > Examples > Expressions > Boolean operations
list include
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
List<String> exampleListC = new ArrayList<>();
exampleListC.addAll(Arrays.asList("a", "b", "c", "d", "e"));
String exampleStringC = "c";
exampleListC.contains(exampleStringC);

##MyBox#
JShell codes > Examples > Expressions > Boolean operations
string match
// MyBox library paths should have been added in JShell environment
import mara.mybox.tools.StringTools;
String exampleStringM = "abc1233hello";
String exampleRegexM = "\\S*3{2,}\\S*";  
boolean exampleCaseInsensitiveM = true;
StringTools.match(exampleStringM,exampleRegexM,exampleCaseInsensitiveM);

##MyBox#
JShell codes > Examples > Expressions > Boolean operations
string include
// MyBox library paths should have been added in JShell environment
import mara.mybox.tools.StringTools;
String exampleStringI = "abc1233hello";
String exampleRegexI = "3{2}";
boolean exampleCaseInsensitiveI = true;
StringTools.include(exampleStringI,exampleRegexI,exampleCaseInsensitiveI);

##MyBox#
JShell codes > Examples > Expressions > Boolean operations
and/or/not
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
List<String> exampleListB = new ArrayList<>();
exampleListB.addAll(Arrays.asList("a", "b", "c", "d", "e"));
String exampleStringB = "c";
exampleListB.contains(exampleStringB) && 
(exampleListB.size() >= 8 || exampleStringB.length() != 1 || !exampleStringB.startsWith("h"));

##MyBox#
JShell codes > Examples
Methods

##MyBox#
JShell codes > Examples > Methods
Area of circle
double circleAreaByDiameter(double diameter) {        
    double radius = diameter / 2;        
    return   Math.PI *  radius * radius ;        
}
circleAreaByDiameter(120) + circleAreaByDiameter(30)

##MyBox#
JShell codes > Examples > Methods
Round value
import java.math.BigDecimal;        
import java.math.RoundingMode;        
double scale(double v, int scale) {        
    BigDecimal b = new BigDecimal(v);        
    return b.setScale(scale, RoundingMode.HALF_UP).doubleValue();        
}    
scale(Math.PI, 3)

##MyBox#
JShell codes > Examples > Methods
Format number
import java.math.BigDecimal;        
import java.math.RoundingMode;        
double scale(double v, int scale) {        
    BigDecimal b = new BigDecimal(v);        
    return b.setScale(scale, RoundingMode.HALF_UP).doubleValue();        
}        
                                     
import java.text.DecimalFormat;        
String formatDouble(double data, int scale) {        
    try {        
        String format = "#,###";        
        if (scale > 0) {        
            format += "." + "#".repeat(scale);        
        }        
        DecimalFormat df = new DecimalFormat(format);        
        return df.format(scale(data, scale));        
    } catch (Exception e) {        
        return e.toString();        
    }        
}        
                                     
double circleAreaByRadius(double radius) {        
    return   Math.PI *  radius * radius ;        
}        
                                     
formatDouble(circleAreaByRadius(273.4), 4)

##MyBox#
JShell codes > Examples > Methods
Format date
import java.util.Date;
import java.util.TimeZone;
import java.text.SimpleDateFormat;

String DatetimeFormat = "yyyy-MM-dd HH:mm:ss.SSS";

String datetimeToString(Date theDate, String format, TimeZone theZone) {
    if (theDate == null || theZone == null) {
            return null;
    }
    SimpleDateFormat formatter = new SimpleDateFormat(format);
    formatter.setTimeZone(theZone);
    String dateString = formatter.format(theDate);
    return dateString;
}

datetimeToString(new Date(), DatetimeFormat, TimeZone.getDefault());

##MyBox#
JShell codes > Examples > Methods
string match
import java.util.regex.Matcher;
import java.util.regex.Pattern;

boolean match(String string, String find, boolean isRegex,
            boolean dotAll, boolean multiline, boolean caseInsensitive) {
        if (string == null || find == null || find.isEmpty()) {
            return false;
        }
        try {
            int mode = (isRegex ? 0x00 : Pattern.LITERAL)
                    | (caseInsensitive ? Pattern.CASE_INSENSITIVE : 0x00)
                    | (dotAll ? Pattern.DOTALL : 0x00)
                    | (multiline ? Pattern.MULTILINE : 0x00);
            Pattern pattern = Pattern.compile(find, mode);
            Matcher matcher = pattern.matcher(string);
            return matcher.matches();
        } catch (Exception e) {
            return false;
        }
}

match("Hello1233World", "\\S*3{2,}\\S*", true, true, true, true);

##MyBox#
JShell codes > Examples > Methods
string include
import java.util.regex.Matcher;
import java.util.regex.Pattern;

boolean include(String string, String find, boolean caseInsensitive) {
        if (string == null || find == null || find.isEmpty()) {
            return false;
        }
        try {
            int mode = (caseInsensitive ? Pattern.CASE_INSENSITIVE : 0x00) | Pattern.MULTILINE;
            Pattern pattern = Pattern.compile(find, mode);
            Matcher matcher = pattern.matcher(string);
            return matcher.find();
        } catch (Exception e) {
            return false;
        }
    }

include("Hello1233World", "3{2}", true);
